plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.hilt.android
    alias libs.plugins.devtools.ksp
    alias libs.plugins.google.maps.secrets
    id "com.google.protobuf" version '0.9.0'
}

android {
    namespace 'al.bruno.core'
    compileSdk 34
    defaultConfig {
        minSdk 21
        targetSdk 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    api project(path: ':common')
    api project(path: ':domain')
    // DateStore
    api libs.datastore.preferences
    api libs.datastore.core
    api libs.protobuf
    // Retrofit
    api libs.retrofit
    api libs.okhttp3.logging.interceptor
    api libs.converter.moshi
    // worker
    api libs.androidx.work.runtime.ktx
    api libs.androidx.hilt.work
    api libs.compressor
//    implementation 'com.google.firebase:firebase-perf-ktx'

    // Hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler
    ksp libs.dagger.hilt.android.compiler

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.26.0-RC3"
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}