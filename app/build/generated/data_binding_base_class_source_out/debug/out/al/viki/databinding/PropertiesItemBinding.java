// Generated by data binding compiler. Do not edit!
package al.viki.databinding;

import al.bruno.adapter.OnClickListener;
import al.bruno.core.data.source.model.response.PropertyResponse;
import al.viki.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class PropertiesItemBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView properties;

  @NonNull
  public final AppCompatImageView propertiesDeleteItem;

  @NonNull
  public final MaterialTextView propertiesItemAddress;

  @NonNull
  public final AppCompatImageView propertiesItemImage;

  @NonNull
  public final LinearLayout propertiesItemInfo;

  @NonNull
  public final MaterialTextView propertiesItemPrice;

  @NonNull
  public final MaterialTextView propertiesItemTitle;

  @NonNull
  public final AppCompatImageView propertiesShareItem;

  @Bindable
  protected PropertyResponse mProperty;

  @Bindable
  protected OnClickListener mOnClick;

  protected PropertiesItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView properties, AppCompatImageView propertiesDeleteItem,
      MaterialTextView propertiesItemAddress, AppCompatImageView propertiesItemImage,
      LinearLayout propertiesItemInfo, MaterialTextView propertiesItemPrice,
      MaterialTextView propertiesItemTitle, AppCompatImageView propertiesShareItem) {
    super(_bindingComponent, _root, _localFieldCount);
    this.properties = properties;
    this.propertiesDeleteItem = propertiesDeleteItem;
    this.propertiesItemAddress = propertiesItemAddress;
    this.propertiesItemImage = propertiesItemImage;
    this.propertiesItemInfo = propertiesItemInfo;
    this.propertiesItemPrice = propertiesItemPrice;
    this.propertiesItemTitle = propertiesItemTitle;
    this.propertiesShareItem = propertiesShareItem;
  }

  public abstract void setProperty(@Nullable PropertyResponse property);

  @Nullable
  public PropertyResponse getProperty() {
    return mProperty;
  }

  public abstract void setOnClick(@Nullable OnClickListener onClick);

  @Nullable
  public OnClickListener getOnClick() {
    return mOnClick;
  }

  @NonNull
  public static PropertiesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.properties_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PropertiesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PropertiesItemBinding>inflateInternal(inflater, R.layout.properties_item, root, attachToRoot, component);
  }

  @NonNull
  public static PropertiesItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.properties_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PropertiesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PropertiesItemBinding>inflateInternal(inflater, R.layout.properties_item, null, false, component);
  }

  public static PropertiesItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PropertiesItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (PropertiesItemBinding)bind(component, view, R.layout.properties_item);
  }
}
